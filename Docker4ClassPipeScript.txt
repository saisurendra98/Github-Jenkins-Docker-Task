pipeline{
    agent any
    stages{
        stage("Git-Colne"){
            steps{
                git branch: 'Docker4RepoClass', url: 'https://github.com/saisurendra98/Github-Jenkins-Docker-Task.git'
            }
        }
        stage("Build-Docker-Image"){
            steps{
                sh 'docker build -t $img .'
            }
        }
        stage("Run-Docker-Conatiner"){
            steps{
                sh 'docker stop pyla'
                sh 'docker rm pyla'
                sh 'docker run -itd --name pyla -p 80:80 $img'
            }
        }
        stage("Tagging-Image"){
            steps{
                sh 'docker tag $img $repo'
            }
        }
        stage("Push-Image-DockerHub"){
            steps{
                sh 'docker login -u $username -p $password'
                sh 'docker push $repo'
            }
        }
    }
}

----------------------------------------------------------------------------------------
* Copy the above code & paste into Pipeline Script.
* Must use any one of these Options :
1)Select "The Project is parameterizrd" option -> (choice parameter) below at description in Job Creation in Jenkins.
* It Worked âœ” --> Practically i) (Name -> img 
                                  Choices -> webappnew:v2 
                                             webappold:v1)
                               ii) (Name -> repo 
                                    Choices -> saisurendra25/webappnew:v2
                                               saisurendra25/webappold:v1)
                              iii) (Name -> username 
                                    Choices -> saisurendra25)
                              iv)  (Name -> password 
                                    Choices -> Sure@Devops#_9285#)
2) Select "Environemnt Variable" option in "Global Properties". Manage Jenkins->System -> Gloabl Properties.
* It Worked âœ”  --> Practically -> above i&ii) Both are same. iii & iv) delete & add below lines in ðŸ‘† path.
                               iii) (Name -> username 
                                    Value -> saisurendra25)
                               iv) (Name -> password
                                    Value -> Sure@Devops#_9285#)

3) Select "Credentials" option in Manage Jenkins.
* It Worked âœ”  --> Practically -> above i&ii) Both are same. iii & iv) delete & add below lines in ðŸ‘† path.
                                         iii) Click (global) in that page -> click Add Credentials option.
                                            * Kind        ->  username with passwword
                                            * Scope       ->  Global (Jenkins, nodes, items, all child items, etc)
                                            * Username    ->  your genuine docker username. (Dont tick as secret)
                                            * Password    ->  your genuine docker password.
                                            * ID          ->  our wish(docker)
                                            * Description ->  our wish(docker)   ---> create.
                                         iv) In Pipeline Syntax .
                                            * Sample Step -> withCredentials: Bind credentials to variables          
                                            * Bindings    -> click Username and password (separated) âœ” 
                                               ðŸ‘‰ Username Variable -> username (which is given at last login Step in the script)
                                               ðŸ‘‰ Password Variable -> password (which is given at last login Step in the script)
                                               ðŸ‘‰ Credentials       -> select (which we given at Credential option in Manage Settings)
                                                 Ciick -> Generate Pipeline Syntax ðŸ‘‡
withCredentials([usernamePassword(credentialsId: 'docker', passwordVariable: 'password', usernameVariable: 'username')]) {
    // some block
}

* I Edited the Syntax like this in at last StepðŸ‘‡
stage("Push-Image-DockerHub"){
            steps{
                withCredentials([usernamePassword(credentialsId: 'docker', passwordVariable: 'password', usernameVariable: 'username')]) {
    sh 'docker login -u $username -p $password'
                sh 'docker push $repo'
} 
 }
        }
